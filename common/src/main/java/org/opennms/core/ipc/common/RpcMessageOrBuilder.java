// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ipc.proto

package org.opennms.core.ipc.common;

public interface RpcMessageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:RpcMessage)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string rpc_id = 1;</code>
   * @return The rpcId.
   */
  String getRpcId();
  /**
   * <code>string rpc_id = 1;</code>
   * @return The bytes for rpcId.
   */
  com.google.protobuf.ByteString
      getRpcIdBytes();

  /**
   * <code>bytes rpc_content = 2;</code>
   * @return The rpcContent.
   */
  com.google.protobuf.ByteString getRpcContent();

  /**
   * <code>string system_id = 3;</code>
   * @return The systemId.
   */
  String getSystemId();
  /**
   * <code>string system_id = 3;</code>
   * @return The bytes for systemId.
   */
  com.google.protobuf.ByteString
      getSystemIdBytes();

  /**
   * <code>string location = 4;</code>
   * @return The location.
   */
  String getLocation();
  /**
   * <code>string location = 4;</code>
   * @return The bytes for location.
   */
  com.google.protobuf.ByteString
      getLocationBytes();

  /**
   * <code>string module_id = 5;</code>
   * @return The moduleId.
   */
  String getModuleId();
  /**
   * <code>string module_id = 5;</code>
   * @return The bytes for moduleId.
   */
  com.google.protobuf.ByteString
      getModuleIdBytes();

  /**
   * <code>uint64 expiration_time = 6;</code>
   * @return The expirationTime.
   */
  long getExpirationTime();

  /**
   * <code>int32 current_chunk_number = 7;</code>
   * @return The currentChunkNumber.
   */
  int getCurrentChunkNumber();

  /**
   * <code>int32 total_chunks = 8;</code>
   * @return The totalChunks.
   */
  int getTotalChunks();

  /**
   * <code>map&lt;string, string&gt; tracing_info = 9;</code>
   */
  int getTracingInfoCount();
  /**
   * <code>map&lt;string, string&gt; tracing_info = 9;</code>
   */
  boolean containsTracingInfo(
          String key);
  /**
   * Use {@link #getTracingInfoMap()} instead.
   */
  @Deprecated
  java.util.Map<String, String>
  getTracingInfo();
  /**
   * <code>map&lt;string, string&gt; tracing_info = 9;</code>
   */
  java.util.Map<String, String>
  getTracingInfoMap();
  /**
   * <code>map&lt;string, string&gt; tracing_info = 9;</code>
   */

  String getTracingInfoOrDefault(
          String key,
          String defaultValue);
  /**
   * <code>map&lt;string, string&gt; tracing_info = 9;</code>
   */

  String getTracingInfoOrThrow(
          String key);
}
